{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tornt\\\\OneDrive\\\\Desktop\\\\temp\\\\src\\\\spotify\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport TrackSearchResult from './TrackSearchResult';\nimport Player from './Player';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '2387a2a4c594439a9f66f97fb886ca59'\n});\nconst homePage = 'http://localhost:3000';\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingtrack] = useState([]);\n  const [choosePlaylists, setChoosePlaylists] = useState(false);\n  const [chooseTopSongs, setChooseTopSongs] = useState(false);\n  const [chooseSearchSongs, setChooseSearchSongs] = useState(false);\n  const [chooseMainMenu, setChooseMainMenu] = useState(false);\n  const [artistID, setArtistID] = useState('');\n  const [market, setMarket] = useState('');\n  const [play, setPlay] = useState(false);\n\n  // Handles Search by Playlist button back end\n  function fChoosePlaylists() {\n    setChoosePlaylists(true);\n    setChooseTopSongs(false);\n    setChooseSearchSongs(false);\n    setChooseMainMenu(false);\n    setSearch('');\n  }\n  // Handles Search Top Songs by Artist button back end\n  function fChooseTopSongs() {\n    setChooseTopSongs(true);\n    setChooseSearchSongs(false);\n    setChooseMainMenu(false);\n    setChoosePlaylists(false);\n    setSearch('');\n  }\n  // Handles Search Songs button back end\n  function fChooseSearchSongs() {\n    setChooseSearchSongs(true);\n    setChooseMainMenu(false);\n    setChoosePlaylists(false);\n    setChooseTopSongs(false);\n    setSearch('');\n  }\n  // Handles Main Menu button back end\n  function fChooseMainMenu() {\n    setChooseMainMenu(true);\n    setChooseSearchSongs(false);\n    setChoosePlaylists(false);\n    setChooseTopSongs(false);\n  }\n  function chooseTrack(track) {\n    setPlayingtrack(track);\n  }\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  /* Search Songs code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s \r\n   * Web Dev Simplified\r\n   * \"How to Build a Better Spotify with React\"\r\n   * \r\n   * All other search options were written by Matthew Greenway\r\n   * \r\n   * Searches based on which button is clicked and when the search bar is changed\r\n   */\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    if (chooseSearchSongs) {\n      spotifyApi.searchTracks(search).then(res => {\n        if (cancel) return;\n        console.log(res);\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          };\n        }));\n      });\n    }\n    if (choosePlaylists) {\n      spotifyApi.searchPlaylists(search).then(res => {\n        if (cancel) return;\n        console.log(res);\n        setSearchResults(res.body.playlists.items.map(items => {\n          const smallestAlbumImage = items.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, items.images[0]);\n          return {\n            artist: items.name,\n            // playlist name\n            title: items.description,\n            // playlist description\n            uri: items.uri,\n            albumUrl: smallestAlbumImage.url,\n            //uncaught type error here?\n            id: items.id\n          };\n        }));\n      });\n    }\n    if (chooseTopSongs) {\n      spotifyApi.searchArtists(search).then(res => {\n        if (cancel) return;\n        console.log(res);\n        setArtistID(res.body.artists.items[0].id);\n        setMarket('US');\n      });\n      console.log(artistID);\n      spotifyApi.getArtistTopTracks(artistID, market).then(res => {\n        console.log(res);\n        setSearchResults(res.body.tracks.map(tracks => {\n          const smallestAlbumImage = tracks.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, tracks.album.images[0]);\n          return {\n            artist: tracks.artists[0].name,\n            title: tracks.name,\n            uri: tracks.uri,\n            albumUrl: smallestAlbumImage.url\n          };\n        }));\n      });\n    }\n    return () => cancel = true;\n  }, [search, accessToken]);\n  /* Matthew Greenway wrote this with some shared code from the youtube video\r\n   * \r\n   * Searches for playlists by description\r\n   */\n  if (choosePlaylists) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChoosePlaylists,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#522D80',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseTopSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Top Songs by Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseSearchSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: homePage,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 300,\n            backgroundColor: '#522D80',\n            marginTop: 20,\n            minHeight: 100\n          },\n          onClick: fChooseMainMenu,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Main Menu / Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          placeholder: \"Search Playlists\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poopoo\",\n          children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n            track: track,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(SpotifyPlayer\n      //autoPlay={true}\n      , {\n        token: accessToken,\n        showSaveIcon: true,\n        callback: state => {\n          if (!state.isPlaying) setPlay(false);\n        },\n        play: true,\n        uris: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poopoo\",\n        children: [\"Select a Song and Hit Play!\", /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n  /* Matthew Greenway wrote this with some shared code from the youtube video\r\n   * \r\n   * Searches for top songs by artist when clicked\r\n   */else if (chooseTopSongs) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChoosePlaylists,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#522D80',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseTopSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Top Songs by Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseSearchSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: homePage,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 300,\n            backgroundColor: '#522D80',\n            marginTop: 20,\n            minHeight: 100\n          },\n          onClick: fChooseMainMenu,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Main Menu / Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          placeholder: \"Search Artists\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poopoo\",\n          children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n            track: track,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poopoo\",\n        children: [\"Select a Song and Hit Play!\", /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n  /* Code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s\r\n   * Web Dev Simplified\r\n   * \"How to Build a Better Spotify with React\"\r\n   * \r\n   * After Search Songs button is clicked this runs\r\n   */else if (chooseSearchSongs) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChoosePlaylists,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#522D80',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseTopSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Top Songs by Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseSearchSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: homePage,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 300,\n            backgroundColor: '#522D80',\n            marginTop: 20,\n            minHeight: 100\n          },\n          onClick: fChooseMainMenu,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Main Menu / Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          placeholder: \"Search Songs/Artists\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poopoo\",\n          children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n            track: track,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poopoo\",\n        children: [\"Select a Song and Hit Play!\", /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this);\n  } else {\n    fChooseSearchSongs();\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChoosePlaylists,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#522D80',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseTopSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Top Songs by Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 300,\n          backgroundColor: '#F56600',\n          marginTop: 20,\n          minHeight: 100\n        },\n        onClick: fChooseSearchSongs,\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Search by Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: homePage,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 300,\n            backgroundColor: '#522D80',\n            marginTop: 20,\n            minHeight: 100\n          },\n          onClick: fChooseMainMenu,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Main Menu / Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          placeholder: \"Search Songs/Artists\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poopoo\",\n          children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n            track: track,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poopoo\",\n        children: [\"Select a Song and Hit Play!\", /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Dashboard, \"stooseSfBK1esnLKfn4gKNNx1WA=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","SpotifyWebApi","TrackSearchResult","Player","SpotifyPlayer","spotifyApi","clientId","homePage","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingtrack","choosePlaylists","setChoosePlaylists","chooseTopSongs","setChooseTopSongs","chooseSearchSongs","setChooseSearchSongs","chooseMainMenu","setChooseMainMenu","artistID","setArtistID","market","setMarket","play","setPlay","fChoosePlaylists","fChooseTopSongs","fChooseSearchSongs","fChooseMainMenu","chooseTrack","track","setAccessToken","cancel","searchTracks","then","res","console","log","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","searchPlaylists","playlists","description","id","searchArtists","getArtistTopTracks","width","backgroundColor","marginTop","minHeight","e","target","value","state","isPlaying"],"sources":["C:/Users/tornt/OneDrive/Desktop/temp/src/spotify/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\nimport SpotifyWebApi from 'spotify-web-api-node'\r\nimport TrackSearchResult from './TrackSearchResult'\r\nimport Player from './Player'\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: '2387a2a4c594439a9f66f97fb886ca59',\r\n})\r\n\r\nconst homePage = 'http://localhost:3000'\r\n\r\nexport default function Dashboard({ code }) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState('')\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingtrack] = useState([])\r\n    const [choosePlaylists, setChoosePlaylists] = useState(false)\r\n    const [chooseTopSongs, setChooseTopSongs] = useState(false)\r\n    const [chooseSearchSongs, setChooseSearchSongs] = useState(false)\r\n    const [chooseMainMenu, setChooseMainMenu] = useState(false)\r\n    const [artistID, setArtistID] = useState('')\r\n    const [market, setMarket] = useState('')\r\n    const [play, setPlay] = useState(false)\r\n\r\n    // Handles Search by Playlist button back end\r\n    function fChoosePlaylists() {\r\n        setChoosePlaylists(true)\r\n        setChooseTopSongs(false)\r\n        setChooseSearchSongs(false)\r\n        setChooseMainMenu(false)\r\n        setSearch('')\r\n    }\r\n    // Handles Search Top Songs by Artist button back end\r\n    function fChooseTopSongs() {\r\n        setChooseTopSongs(true)\r\n        setChooseSearchSongs(false)\r\n        setChooseMainMenu(false)\r\n        setChoosePlaylists(false)\r\n        setSearch('')\r\n    }\r\n    // Handles Search Songs button back end\r\n    function fChooseSearchSongs(){\r\n        setChooseSearchSongs(true)\r\n        setChooseMainMenu(false)\r\n        setChoosePlaylists(false)\r\n        setChooseTopSongs(false)\r\n        setSearch('')\r\n    }\r\n    // Handles Main Menu button back end\r\n    function fChooseMainMenu(){\r\n        setChooseMainMenu(true)\r\n        setChooseSearchSongs(false)\r\n        setChoosePlaylists(false)\r\n        setChooseTopSongs(false)\r\n    }\r\n\r\n    function chooseTrack(track) {\r\n        setPlayingtrack(track)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    /* Search Songs code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s \r\n     * Web Dev Simplified\r\n     * \"How to Build a Better Spotify with React\"\r\n     * \r\n     * All other search options were written by Matthew Greenway\r\n     * \r\n     * Searches based on which button is clicked and when the search bar is changed\r\n     */\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        let cancel = false\r\n        if (chooseSearchSongs) {\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return\r\n            console.log(res)\r\n            setSearchResults(\r\n            res.body.tracks.items.map(track => {\r\n                const smallestAlbumImage = track.album.images.reduce((smallest,image) => {\r\n                    if (image.height < smallest.height) return image\r\n                    return smallest\r\n                }, track.album.images[0])\r\n\r\n                return {\r\n                   artist: track.artists[0].name,\r\n                   title: track.name,\r\n                   uri: track.uri,\r\n                   albumUrl: smallestAlbumImage.url\r\n                }\r\n            }))\r\n        })}\r\n        if (choosePlaylists) {\r\n            spotifyApi.searchPlaylists(search).then(res => {\r\n                if (cancel) return\r\n                console.log(res)\r\n                setSearchResults(\r\n                res.body.playlists.items.map(items => {\r\n                    const smallestAlbumImage = items.images.reduce((smallest,image) => {\r\n                        if (image.height < smallest.height) return image\r\n                        return smallest\r\n                    }, items.images[0])\r\n    \r\n                    return {\r\n                        artist: items.name, // playlist name\r\n                        title: items.description, // playlist description\r\n                        uri: items.uri,\r\n                        albumUrl: smallestAlbumImage.url, //uncaught type error here?\r\n                        id: items.id\r\n                    }\r\n                }))\r\n            })}\r\n        if (chooseTopSongs) {\r\n            spotifyApi.searchArtists(search).then(res => {\r\n                if (cancel) return\r\n                console.log(res)\r\n                setArtistID(res.body.artists.items[0].id)\r\n                setMarket('US')\r\n            })\r\n            console.log(artistID)\r\n            spotifyApi.getArtistTopTracks(artistID, market).then(res => {\r\n                console.log(res)\r\n                setSearchResults(\r\n                res.body.tracks.map(tracks => {\r\n                    const smallestAlbumImage = tracks.album.images.reduce((smallest,image) => {\r\n                        if (image.height < smallest.height) return image\r\n                        return smallest\r\n                    }, tracks.album.images[0])\r\n        \r\n                    return {\r\n                        artist: tracks.artists[0].name, \r\n                        title: tracks.name, \r\n                        uri: tracks.uri,\r\n                        albumUrl: smallestAlbumImage.url\r\n                    }\r\n                }))\r\n            })}\r\n\r\n        return () => cancel = true\r\n    }, [search,accessToken])\r\n    /* Matthew Greenway wrote this with some shared code from the youtube video\r\n     * \r\n     * Searches for playlists by description\r\n     */\r\n    if (choosePlaylists) {\r\n        return (\r\n            <h1>\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChoosePlaylists}>\r\n                    <center>\r\n                        <h6>Search by Playlist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseTopSongs}>\r\n                    <center>\r\n                        <h6>Top Songs by Artist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChooseSearchSongs}>\r\n                    <center>\r\n                        <h6>Search by Song</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <a href={homePage}>\r\n                    <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseMainMenu}>\r\n                        <center>\r\n                            <h6>Main Menu / Log Out</h6>\r\n                        </center>\r\n                </button>\r\n                </a>\r\n                <div className=\"search2\">\r\n                    <input value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        placeholder='Search Playlists'\r\n                        type=\"text\"\r\n                    />\r\n                </div>&nbsp;\r\n                <div className='container2'>\r\n                    <div className='poopoo'>\r\n                        {searchResults.map(track => (\r\n                            <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                        ))}\r\n                    </div>\r\n                </div>&nbsp;\r\n                <SpotifyPlayer \r\n        //autoPlay={true}\r\n        token={accessToken}\r\n        showSaveIcon\r\n        callback={state => {\r\n            if (!state.isPlaying) setPlay(false)\r\n        }}\r\n        play={true}\r\n        uris={playingTrack?.uri}/>\r\n                <div className='poopoo'>\r\n                    Select a Song and Hit Play!\r\n                    <Player accessToken={accessToken} trackUri={playingTrack?.uri}/>\r\n                </div>\r\n            </h1> \r\n        )\r\n    }\r\n    /* Matthew Greenway wrote this with some shared code from the youtube video\r\n     * \r\n     * Searches for top songs by artist when clicked\r\n     */\r\n    else if (chooseTopSongs) {\r\n        return (\r\n            <h1>\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChoosePlaylists}>\r\n                    <center>\r\n                        <h6>Search by Playlist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseTopSongs}>\r\n                    <center>\r\n                        <h6>Top Songs by Artist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChooseSearchSongs}>\r\n                    <center>\r\n                        <h6>Search by Song</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <a href={homePage}>\r\n                    <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseMainMenu}>\r\n                        <center>\r\n                            <h6>Main Menu / Log Out</h6>\r\n                        </center>\r\n                </button>\r\n                </a>\r\n                <div className=\"search2\">\r\n                    <input value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        placeholder='Search Artists'\r\n                        type=\"text\"\r\n                    />\r\n                </div>&nbsp;\r\n                <div className='container2'>\r\n                    <div className='poopoo'>\r\n                        {searchResults.map(track => (\r\n                            <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                        ))}\r\n                    </div>\r\n                </div>&nbsp;\r\n                <div className='poopoo'>\r\n                    Select a Song and Hit Play!\r\n                    <Player accessToken={accessToken} trackUri={playingTrack?.uri}/>\r\n                </div>\r\n            </h1>\r\n        )\r\n    }\r\n    /* Code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s\r\n     * Web Dev Simplified\r\n     * \"How to Build a Better Spotify with React\"\r\n     * \r\n     * After Search Songs button is clicked this runs\r\n     */\r\n    else if(chooseSearchSongs) {\r\n        return (\r\n            <h1>\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChoosePlaylists}>\r\n                    <center>\r\n                        <h6>Search by Playlist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseTopSongs}>\r\n                    <center>\r\n                        <h6>Top Songs by Artist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChooseSearchSongs}>\r\n                    <center>\r\n                        <h6>Search by Song</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <a href={homePage}>\r\n                    <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseMainMenu}>\r\n                        <center>\r\n                            <h6>Main Menu / Log Out</h6>\r\n                        </center>\r\n                </button>\r\n                </a>\r\n                <div className=\"search2\">\r\n                    <input value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        placeholder='Search Songs/Artists'\r\n                        type=\"text\"\r\n                    />\r\n                </div>&nbsp;\r\n                <div className='container2'>\r\n                    <div className='poopoo'>\r\n                        {searchResults.map(track => (\r\n                            <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                        ))}\r\n                    </div>\r\n                </div>&nbsp;\r\n                <div className='poopoo'>\r\n                    Select a Song and Hit Play!\r\n                    <Player accessToken={accessToken} trackUri={playingTrack?.uri}/>\r\n                </div>\r\n            </h1>\r\n        )\r\n    } \r\n    else {\r\n        fChooseSearchSongs()\r\n        return (\r\n            <h1>\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChoosePlaylists}>\r\n                    <center>\r\n                        <h6>Search by Playlist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseTopSongs}>\r\n                    <center>\r\n                        <h6>Top Songs by Artist</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <button style={{ width: 300, backgroundColor: '#F56600', marginTop: 20, minHeight: 100, }} onClick={fChooseSearchSongs}>\r\n                    <center>\r\n                        <h6>Search by Song</h6>\r\n                    </center>\r\n                </button>&nbsp;&nbsp;\r\n                <a href={homePage}>\r\n                    <button style={{ width: 300, backgroundColor: '#522D80', marginTop: 20, minHeight: 100, }} onClick={fChooseMainMenu}>\r\n                        <center>\r\n                            <h6>Main Menu / Log Out</h6>\r\n                        </center>\r\n                </button>\r\n                </a>\r\n                <div className=\"search2\">\r\n                    <input value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        placeholder='Search Songs/Artists'\r\n                        type=\"text\"\r\n                    />\r\n                </div>&nbsp;\r\n                <div className='container2'>\r\n                    <div className='poopoo'>\r\n                        {searchResults.map(track => (\r\n                            <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n                        ))}\r\n                    </div>\r\n                </div>&nbsp;\r\n                <div className='poopoo'>\r\n                    Select a Song and Hit Play!\r\n                    <Player accessToken={accessToken} trackUri={playingTrack?.uri}/>\r\n                </div>\r\n            </h1>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}