{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tornt\\\\OneDrive\\\\Desktop\\\\temp\\\\src\\\\spotify\\\\Player.js\",\n  _s = $RefreshSig$();\n/* Code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s\r\n * Web Dev Simplified\r\n * \"How to Build a Better Spotify with React\"\r\n * \r\n * Handles spotify player, slight edits made by Matthew Greenway\r\n */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n  let {\n    accessToken,\n    trackUri\n  } = _ref;\n  const [play, setPlay] = useState(false);\n  useEffect(() => setPlay(true), [trackUri]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer\n  //autoPlay={true}\n  , {\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: true,\n    uris: trackUri ? [trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyPlayer","Player","accessToken","trackUri","play","setPlay","state","isPlaying"],"sources":["C:/Users/tornt/OneDrive/Desktop/temp/src/spotify/Player.js"],"sourcesContent":["/* Code from https://www.youtube.com/watch?v=Xcet6msf3eE&t=237s\r\n * Web Dev Simplified\r\n * \"How to Build a Better Spotify with React\"\r\n * \r\n * Handles spotify player, slight edits made by Matthew Greenway\r\n */\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\n\r\nexport default function Player({ accessToken, trackUri }) {\r\n    const [play, setPlay] = useState(false)\r\n    \r\n    useEffect(() => setPlay(true), [trackUri])\r\n\r\n    if (!accessToken) return null\r\n    return <SpotifyPlayer \r\n        //autoPlay={true}\r\n        token={accessToken}\r\n        showSaveIcon\r\n        callback={state => {\r\n            if (!state.isPlaying) setPlay(false)\r\n        }}\r\n        play={true}\r\n        uris={trackUri ? [trackUri] : []}\r\n        />\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAA;AAEtD,eAAe,SAASC,MAAM,OAA4B;EAAA;EAAA,IAA3B;IAAEC,WAAW;IAAEC;EAAS,CAAC;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,MAAMM,OAAO,CAAC,IAAI,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAE1C,IAAI,CAACD,WAAW,EAAE,OAAO,IAAI;EAC7B,oBAAO,QAAC;EACJ;EAAA;IACA,KAAK,EAAEA,WAAY;IACnB,YAAY;IACZ,QAAQ,EAAEI,KAAK,IAAI;MACf,IAAI,CAACA,KAAK,CAACC,SAAS,EAAEF,OAAO,CAAC,KAAK,CAAC;IACxC,CAAE;IACF,IAAI,EAAE,IAAK;IACX,IAAI,EAAEF,QAAQ,GAAG,CAACA,QAAQ,CAAC,GAAG;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/B;AACV;AAAC,GAhBuBF,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}