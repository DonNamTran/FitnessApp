{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport function getBaseProps(props) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  return {\n    axis: (_a = props === null || props === void 0 ? void 0 : props.axis) !== null && _a !== void 0 ? _a : 'x',\n    xMax: (_b = props === null || props === void 0 ? void 0 : props.xMax) !== null && _b !== void 0 ? _b : 100,\n    xMin: (_c = props === null || props === void 0 ? void 0 : props.xMin) !== null && _c !== void 0 ? _c : 0,\n    xStep: (_d = props === null || props === void 0 ? void 0 : props.xStep) !== null && _d !== void 0 ? _d : 1,\n    yMax: (_e = props === null || props === void 0 ? void 0 : props.yMax) !== null && _e !== void 0 ? _e : 100,\n    yMin: (_f = props === null || props === void 0 ? void 0 : props.yMin) !== null && _f !== void 0 ? _f : 0,\n    yStep: (_g = props === null || props === void 0 ? void 0 : props.yStep) !== null && _g !== void 0 ? _g : 1\n  };\n}\nexport function getCoordinates(event, lastPosition) {\n  if ('touches' in event) {\n    // eslint-disable-next-line unicorn/prefer-spread\n    var _a = __read(__spreadArray([], __read(Array.from(event.touches)), false), 1),\n      touch = _a[0];\n    return {\n      x: touch ? touch.clientX : lastPosition.x,\n      y: touch ? touch.clientY : lastPosition.y\n    };\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nexport function getPosition(position, props, el) {\n  var _a = getBaseProps(props),\n    axis = _a.axis,\n    xMax = _a.xMax,\n    xMin = _a.xMin,\n    xStep = _a.xStep,\n    yMax = _a.yMax,\n    yMin = _a.yMin,\n    yStep = _a.yStep;\n  var _b = (el === null || el === void 0 ? void 0 : el.getBoundingClientRect()) || {},\n    _c = _b.height,\n    height = _c === void 0 ? xMax : _c,\n    _d = _b.width,\n    width = _d === void 0 ? yMax : _d;\n  var x = position.x,\n    y = position.y;\n  var dx = 0;\n  var dy = 0;\n  if (x < 0) {\n    x = 0;\n  }\n  if (x > width) {\n    x = width;\n  }\n  if (y < 0) {\n    y = 0;\n  }\n  if (y > height) {\n    y = height;\n  }\n  if (axis === 'x' || axis === 'xy') {\n    dx = Math.round(x / width * (xMax - xMin));\n  }\n  if (axis === 'y' || axis === 'xy') {\n    dy = Math.round(y / height * (yMax - yMin));\n  }\n  return {\n    x: round(dx, xStep),\n    y: round(dy, yStep)\n  };\n}\n/**\n * Get a normalized value\n */\nexport function getNormalizedValue(name, props) {\n  var value = props[name] || 0;\n  var min = name === 'x' ? props.xMin : props.yMin;\n  var max = name === 'x' ? props.xMax : props.yMax;\n  if (isNumber(min) && value < min) {\n    return min;\n  }\n  if (isNumber(max) && value > max) {\n    return max;\n  }\n  return value;\n}\n/**\n * Check if the value is a number\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Check if the value is undefined\n */\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Parse a string into a number or return it if it's already a number\n */\nexport function parseNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseInt(value, 10);\n}\n/**\n *  Remove properties from an object\n */\nexport function removeProperties(input) {\n  var filter = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n  var output = {};\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nexport function round(value, increment) {\n  return Math.ceil(value / increment) * increment;\n}","map":{"version":3,"mappings":"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","names":["getBaseProps","props","axis","xMax","xMin","xStep","yMax","yMin","yStep","getCoordinates","event","lastPosition","Array","from","touches","touch","x","clientX","y","clientY","getPosition","position","el","getBoundingClientRect","_c","height","_d","width","dx","dy","Math","round","getNormalizedValue","name","value","min","max","isNumber","isUndefined","parseNumber","parseInt","removeProperties","input","_i","filter","output","key","hasOwnProperty","call","includes","increment","ceil"],"sources":["C:\\Users\\tornt\\OneDrive\\Desktop\\temp\\node_modules\\@gilbarbara\\react-range-slider\\src\\utils.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { PlainObject, RangeSliderPosition, RangeSliderProps } from './types';\n\ntype BaseProps = Required<\n  Pick<RangeSliderProps, 'axis' | 'xMax' | 'xMin' | 'xStep' | 'yMax' | 'yMin' | 'yStep'>\n>;\n\nexport function getBaseProps(props?: RangeSliderProps): BaseProps {\n  return {\n    axis: props?.axis ?? 'x',\n    xMax: props?.xMax ?? 100,\n    xMin: props?.xMin ?? 0,\n    xStep: props?.xStep ?? 1,\n    yMax: props?.yMax ?? 100,\n    yMin: props?.yMin ?? 0,\n    yStep: props?.yStep ?? 1,\n  };\n}\n\nexport function getCoordinates(\n  event: MouseEvent | React.MouseEvent | TouchEvent | React.TouchEvent,\n  lastPosition: RangeSliderPosition,\n): RangeSliderPosition {\n  if ('touches' in event) {\n    // eslint-disable-next-line unicorn/prefer-spread\n    const [touch] = [...Array.from(event.touches)];\n\n    return {\n      x: touch ? touch.clientX : lastPosition.x,\n      y: touch ? touch.clientY : lastPosition.y,\n    };\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY,\n  };\n}\n\nexport function getPosition(\n  position: RangeSliderPosition,\n  props: RangeSliderProps,\n  el: HTMLDivElement | null,\n): RangeSliderPosition {\n  const { axis, xMax, xMin, xStep, yMax, yMin, yStep } = getBaseProps(props);\n  const { height = xMax, width = yMax } = el?.getBoundingClientRect() || {};\n  let { x, y } = position;\n  let dx = 0;\n  let dy = 0;\n\n  if (x < 0) {\n    x = 0;\n  }\n\n  if (x > width) {\n    x = width;\n  }\n\n  if (y < 0) {\n    y = 0;\n  }\n\n  if (y > height) {\n    y = height;\n  }\n\n  if (axis === 'x' || axis === 'xy') {\n    dx = Math.round((x / width) * (xMax - xMin));\n  }\n\n  if (axis === 'y' || axis === 'xy') {\n    dy = Math.round((y / height) * (yMax - yMin));\n  }\n\n  return {\n    x: round(dx, xStep),\n    y: round(dy, yStep),\n  };\n}\n\n/**\n * Get a normalized value\n */\nexport function getNormalizedValue(name: 'x' | 'y', props: RangeSliderProps): number {\n  const value = props[name] || 0;\n  const min = name === 'x' ? props.xMin : props.yMin;\n  const max = name === 'x' ? props.xMax : props.yMax;\n\n  if (isNumber(min) && value < min) {\n    return min;\n  }\n\n  if (isNumber(max) && value > max) {\n    return max;\n  }\n\n  return value;\n}\n\n/**\n * Check if the value is a number\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Check if the value is undefined\n */\nexport function isUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * Parse a string into a number or return it if it's already a number\n */\nexport function parseNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, 10);\n}\n\n/**\n *  Remove properties from an object\n */\nexport function removeProperties<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key as unknown as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function round(value: number, increment: number): number {\n  return Math.ceil(value / increment) * increment;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}