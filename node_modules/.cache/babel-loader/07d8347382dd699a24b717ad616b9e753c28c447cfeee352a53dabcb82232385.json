{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport { getDevices, getPlaybackState, next, pause, play, previous, seek, setDevice, setVolume } from './spotify';\nimport { getMergedStyles } from './styles';\nimport { getLocale, getSpotifyURIType, isEqualArray, loadSpotifyPlayer, parseVolume, round, STATUS, TYPE, validateURI } from './utils';\nvar SpotifyWebPlayer = /** @class */function (_super) {\n  __extends(SpotifyWebPlayer, _super);\n  function SpotifyWebPlayer(props) {\n    var _this = _super.call(this, props) || this;\n    Object.defineProperty(_this, \"isActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"emptyTrack\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        artists: [],\n        durationMs: 0,\n        id: '',\n        image: '',\n        name: '',\n        uri: ''\n      }\n    });\n    Object.defineProperty(_this, \"getPlayOptions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: memoize(function (data) {\n        var playOptions = {\n          context_uri: undefined,\n          uris: undefined\n        };\n        /* istanbul ignore else */\n        if (data) {\n          var ids = Array.isArray(data) ? data : [data];\n          if (!ids.every(function (d) {\n            return validateURI(d);\n          })) {\n            // eslint-disable-next-line no-console\n            console.error('Invalid URI');\n            return playOptions;\n          }\n          if (ids.some(function (d) {\n            return getSpotifyURIType(d) === 'track';\n          })) {\n            if (!ids.every(function (d) {\n              return getSpotifyURIType(d) === 'track';\n            })) {\n              // eslint-disable-next-line no-console\n              console.warn(\"You can't mix tracks URIs with other types\");\n            }\n            playOptions.uris = ids.filter(function (d) {\n              return validateURI(d) && getSpotifyURIType(d) === 'track';\n            });\n          } else {\n            if (ids.length > 1) {\n              // eslint-disable-next-line no-console\n              console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n            }\n            // eslint-disable-next-line prefer-destructuring\n            playOptions.context_uri = ids[0];\n          }\n        }\n        return playOptions;\n      })\n    });\n    Object.defineProperty(_this, \"hasNewToken\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"player\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerProgressInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"playerSyncInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"ref\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: React.createRef()\n    });\n    Object.defineProperty(_this, \"seekUpdateInterval\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(_this, \"styles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"syncTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"handleChangeRange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (position) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var track, _a, callback, token, progress, percentage, state, error_1;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                track = this.state.track;\n                _a = this.props, callback = _a.callback, token = _a.token;\n                progress = 0;\n                _b.label = 1;\n              case 1:\n                _b.trys.push([1, 8,, 9]);\n                percentage = position / 100;\n                if (!this.isExternalPlayer) return [3 /*break*/, 3];\n                progress = Math.round(track.durationMs * percentage);\n                return [4 /*yield*/, seek(token, progress)];\n              case 2:\n                _b.sent();\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3 /*break*/, 7];\n              case 3:\n                if (!this.player) return [3 /*break*/, 7];\n                return [4 /*yield*/, this.player.getCurrentState()];\n              case 4:\n                state = _b.sent();\n                if (!state) return [3 /*break*/, 6];\n                progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n                return [4 /*yield*/, this.player.seek(progress)];\n              case 5:\n                _b.sent();\n                this.updateState({\n                  position: position,\n                  progressMs: progress\n                });\n                return [3 /*break*/, 7];\n              case 6:\n                this.updateState({\n                  position: 0\n                });\n                _b.label = 7;\n              case 7:\n                if (callback) {\n                  callback(__assign(__assign({}, this.state), {\n                    type: TYPE.PROGRESS\n                  }));\n                }\n                return [3 /*break*/, 9];\n              case 8:\n                error_1 = _b.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_1);\n                return [3 /*break*/, 9];\n              case 9:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleClickTogglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isActive, error_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                isActive = this.state.isActive;\n                _a.label = 1;\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n                return [4 /*yield*/, this.togglePlay(!this.isExternalPlayer && !isActive)];\n              case 2:\n                _a.sent();\n                return [3 /*break*/, 4];\n              case 3:\n                error_2 = _a.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_2);\n                return [3 /*break*/, 4];\n              case 4:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleClickPrevious\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_3;\n          var _this = this;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n                if (!this.isExternalPlayer) return [3 /*break*/, 2];\n                token = this.props.token;\n                return [4 /*yield*/, previous(token)];\n              case 1:\n                _a.sent();\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3 /*break*/, 4];\n              case 2:\n                if (!this.player) return [3 /*break*/, 4];\n                return [4 /*yield*/, this.player.previousTrack()];\n              case 3:\n                _a.sent();\n                _a.label = 4;\n              case 4:\n                return [3 /*break*/, 6];\n              case 5:\n                error_3 = _a.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_3);\n                return [3 /*break*/, 6];\n              case 6:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleClickNext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token, error_4;\n          var _this = this;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 5,, 6]);\n                if (!this.isExternalPlayer) return [3 /*break*/, 2];\n                token = this.props.token;\n                return [4 /*yield*/, next(token)];\n              case 1:\n                _a.sent();\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3 /*break*/, 4];\n              case 2:\n                if (!this.player) return [3 /*break*/, 4];\n                return [4 /*yield*/, this.player.nextTrack()];\n              case 3:\n                _a.sent();\n                _a.label = 4;\n              case 4:\n                return [3 /*break*/, 6];\n              case 5:\n                error_4 = _a.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_4);\n                return [3 /*break*/, 6];\n              case 6:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleClickDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (deviceId) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var isUnsupported, _a, autoPlay, persistDeviceSelection, token, player, error_5;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                isUnsupported = this.state.isUnsupported;\n                _a = this.props, autoPlay = _a.autoPlay, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n                this.updateState({\n                  currentDeviceId: deviceId\n                });\n                _b.label = 1;\n              case 1:\n                _b.trys.push([1, 7,, 8]);\n                return [4 /*yield*/, setDevice(token, deviceId)];\n              case 2:\n                _b.sent();\n                /* istanbul ignore else */\n                if (persistDeviceSelection) {\n                  sessionStorage.setItem('rswpDeviceId', deviceId);\n                }\n                if (!isUnsupported) return [3 /*break*/, 6];\n                return [4 /*yield*/, this.syncDevice()];\n              case 3:\n                _b.sent();\n                return [4 /*yield*/, getPlaybackState(token)];\n              case 4:\n                player = _b.sent();\n                if (!(player && !player.is_playing && autoPlay)) return [3 /*break*/, 6];\n                return [4 /*yield*/, this.togglePlay(true)];\n              case 5:\n                _b.sent();\n                _b.label = 6;\n              case 6:\n                return [3 /*break*/, 8];\n              case 7:\n                error_5 = _b.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_5);\n                return [3 /*break*/, 8];\n              case 8:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleFavoriteStatusChange\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (status) {\n        var isSaved = _this.state.isSaved;\n        _this.updateState({\n          isSaved: status\n        });\n        /* istanbul ignore else */\n        if (isSaved !== status) {\n          _this.handleCallback(__assign(__assign({}, _this.state), {\n            isSaved: status,\n            type: TYPE.FAVORITE\n          }));\n        }\n      }\n    });\n    Object.defineProperty(_this, \"handlePlayerErrors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (type, message) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var status, isPlaybackError, isInitializationError, nextStatus, devices, token;\n          var _a;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                status = this.state.status;\n                isPlaybackError = type === 'playback_error';\n                isInitializationError = type === 'initialization_error';\n                nextStatus = status;\n                devices = [];\n                if (!(this.player && !isPlaybackError)) return [3 /*break*/, 2];\n                return [4 /*yield*/, this.player.disconnect()];\n              case 1:\n                _b.sent();\n                _b.label = 2;\n              case 2:\n                if (!isInitializationError) return [3 /*break*/, 4];\n                nextStatus = STATUS.UNSUPPORTED;\n                token = this.props.token;\n                return [4 /*yield*/, getDevices(token)];\n              case 3:\n                _a = _b.sent().devices, devices = _a === void 0 ? [] : _a;\n                _b.label = 4;\n              case 4:\n                if (!isInitializationError && !isPlaybackError) {\n                  nextStatus = STATUS.ERROR;\n                }\n                this.updateState({\n                  devices: devices,\n                  error: message,\n                  errorType: type,\n                  isInitializing: false,\n                  isUnsupported: isInitializationError,\n                  status: nextStatus\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handlePlayerStateChanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var paused, position, _a, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _c.trys.push([0, 6,, 7]);\n                if (!state) return [3 /*break*/, 2];\n                paused = state.paused, position = state.position, _a = state.track_window, _b = _a.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a.next_tracks, previous_tracks = _a.previous_tracks;\n                isPlaying = !paused;\n                return [4 /*yield*/, this.player.getVolume()];\n              case 1:\n                volume = _c.sent();\n                track = {\n                  artists: artists,\n                  durationMs: duration_ms,\n                  id: id,\n                  image: this.setAlbumImage(album),\n                  name: name_1,\n                  uri: uri\n                };\n                trackState = void 0;\n                if (position === 0) {\n                  trackState = {\n                    nextTracks: next_tracks,\n                    position: 0,\n                    previousTracks: previous_tracks,\n                    track: track\n                  };\n                }\n                this.updateState(__assign({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: isPlaying,\n                  progressMs: position,\n                  volume: round(volume)\n                }, trackState));\n                return [3 /*break*/, 5];\n              case 2:\n                if (!this.isExternalPlayer) return [3 /*break*/, 4];\n                return [4 /*yield*/, this.syncDevice()];\n              case 3:\n                _c.sent();\n                return [3 /*break*/, 5];\n              case 4:\n                this.updateState({\n                  isActive: false,\n                  isPlaying: false,\n                  nextTracks: [],\n                  position: 0,\n                  previousTracks: [],\n                  track: {\n                    artists: '',\n                    durationMs: 0,\n                    id: '',\n                    image: '',\n                    name: '',\n                    uri: ''\n                  }\n                });\n                _c.label = 5;\n              case 5:\n                return [3 /*break*/, 7];\n              case 6:\n                error_6 = _c.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_6);\n                return [3 /*break*/, 7];\n              case 7:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handlePlayerStatus\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (_a) {\n        var device_id = _a.device_id;\n        return __awaiter(_this, void 0, void 0, function () {\n          var _b, currentDeviceId, devices;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                return [4 /*yield*/, this.initializeDevices(device_id)];\n              case 1:\n                _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;\n                this.updateState({\n                  currentDeviceId: currentDeviceId,\n                  deviceId: device_id,\n                  devices: devices,\n                  isInitializing: false,\n                  status: device_id ? STATUS.READY : STATUS.IDLE\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"handleToggleMagnify\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var magnifySliderOnHover = _this.props.magnifySliderOnHover;\n        if (magnifySliderOnHover) {\n          _this.updateState(function (previousState) {\n            return {\n              isMagnified: !previousState.isMagnified\n            };\n          });\n        }\n      }\n    });\n    Object.defineProperty(_this, \"initializePlayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        var volume = _this.state.volume;\n        var _a = _this.props,\n          _b = _a.name,\n          name = _b === void 0 ? 'Spotify Web Player' : _b,\n          token = _a.token;\n        if (!window.Spotify) {\n          return;\n        }\n        _this.updateState({\n          isInitializing: true\n        });\n        _this.player = new window.Spotify.Player({\n          getOAuthToken: function (callback) {\n            callback(token);\n          },\n          name: name,\n          volume: volume\n        });\n        _this.player.addListener('ready', _this.handlePlayerStatus);\n        _this.player.addListener('not_ready', _this.handlePlayerStatus);\n        _this.player.addListener('player_state_changed', _this.handlePlayerStateChanges);\n        _this.player.addListener('initialization_error', function (error) {\n          return _this.handlePlayerErrors('initialization_error', error.message);\n        });\n        _this.player.addListener('authentication_error', function (error) {\n          return _this.handlePlayerErrors('authentication_error', error.message);\n        });\n        _this.player.addListener('account_error', function (error) {\n          return _this.handlePlayerErrors('account_error', error.message);\n        });\n        _this.player.addListener('playback_error', function (error) {\n          return _this.handlePlayerErrors('playback_error', error.message);\n        });\n        _this.player.connect();\n      }\n    });\n    // eslint-disable-next-line class-methods-use-this\n    Object.defineProperty(_this, \"setAlbumImage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (album) {\n        var width = Math.min.apply(Math, __spreadArray([], __read(album.images.map(function (d) {\n          return d.width || 0;\n        })), false));\n        var thumb = album.images.find(function (d) {\n          return d.width === width;\n        }) || {};\n        return thumb.url;\n      }\n    });\n    Object.defineProperty(_this, \"setExternalDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (id) {\n        _this.updateState({\n          currentDeviceId: id,\n          isPlaying: true\n        });\n      }\n    });\n    Object.defineProperty(_this, \"setVolume\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (volume) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var token;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                token = this.props.token;\n                if (!this.isExternalPlayer) return [3 /*break*/, 3];\n                return [4 /*yield*/, setVolume(token, Math.round(volume * 100))];\n              case 1:\n                _a.sent();\n                return [4 /*yield*/, this.syncDevice()];\n              case 2:\n                _a.sent();\n                return [3 /*break*/, 5];\n              case 3:\n                if (!this.player) return [3 /*break*/, 5];\n                return [4 /*yield*/, this.player.setVolume(volume)];\n              case 4:\n                _a.sent();\n                _a.label = 5;\n              case 5:\n                this.updateState({\n                  volume: volume\n                });\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"syncDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var deviceId, token, player, track, error_7, state;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2 /*return*/];\n                }\n\n                deviceId = this.state.deviceId;\n                token = this.props.token;\n                _a.label = 1;\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n                return [4 /*yield*/, getPlaybackState(token)];\n              case 2:\n                player = _a.sent();\n                track = this.emptyTrack;\n                if (!player) {\n                  throw new Error('No player');\n                }\n                /* istanbul ignore else */\n                if (player.item) {\n                  track = {\n                    artists: player.item.artists,\n                    durationMs: player.item.duration_ms,\n                    id: player.item.id,\n                    image: this.setAlbumImage(player.item.album),\n                    name: player.item.name,\n                    uri: player.item.uri\n                  };\n                }\n                this.updateState({\n                  error: '',\n                  errorType: '',\n                  isActive: true,\n                  isPlaying: player.is_playing,\n                  nextTracks: [],\n                  previousTracks: [],\n                  progressMs: player.item ? player.progress_ms : 0,\n                  status: STATUS.READY,\n                  track: track,\n                  volume: parseVolume(player.device.volume_percent)\n                });\n                return [3 /*break*/, 4];\n              case 3:\n                error_7 = _a.sent();\n                state = {\n                  isActive: false,\n                  isPlaying: false,\n                  position: 0,\n                  track: this.emptyTrack\n                };\n                if (deviceId) {\n                  this.updateState(__assign({\n                    currentDeviceId: deviceId\n                  }, state));\n                  return [2 /*return*/];\n                }\n\n                this.updateState(__assign({\n                  error: error_7.message,\n                  errorType: 'player_status',\n                  status: STATUS.ERROR\n                }, state));\n                return [3 /*break*/, 4];\n              case 4:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"toggleOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, _b, offset, token, uris;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                if (!(isPlaying && typeof offset === 'number' && Array.isArray(uris))) return [3 /*break*/, 2];\n                return [4 /*yield*/, play(token, {\n                  deviceId: currentDeviceId,\n                  offset: offset,\n                  uris: uris\n                })];\n              case 1:\n                _c.sent();\n                _c.label = 2;\n              case 2:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"togglePlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (init) {\n        if (init === void 0) {\n          init = false;\n        }\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;\n          var _this = this;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying, needsUpdate = _a.needsUpdate;\n                _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n                shouldInitialize = init || needsUpdate;\n                playOptions = this.getPlayOptions(uris);\n                _c.label = 1;\n              case 1:\n                _c.trys.push([1, 13,, 14]);\n                if (!this.isExternalPlayer) return [3 /*break*/, 6];\n                if (!!isPlaying) return [3 /*break*/, 3];\n                return [4 /*yield*/, play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n              case 2:\n                _c.sent();\n                return [3 /*break*/, 5];\n              case 3:\n                return [4 /*yield*/, pause(token)];\n              case 4:\n                _c.sent();\n                this.updateState({\n                  isPlaying: false\n                });\n                _c.label = 5;\n              case 5:\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 300);\n                return [3 /*break*/, 12];\n              case 6:\n                if (!this.player) return [3 /*break*/, 12];\n                return [4 /*yield*/, this.player.getCurrentState()];\n              case 7:\n                playerState = _c.sent();\n                return [4 /*yield*/, this.player.activateElement()];\n              case 8:\n                _c.sent();\n                if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused)) return [3 /*break*/, 10];\n                return [4 /*yield*/, play(token, __assign({\n                  deviceId: currentDeviceId,\n                  offset: offset\n                }, shouldInitialize ? playOptions : undefined))];\n              case 9:\n                _c.sent();\n                return [3 /*break*/, 12];\n              case 10:\n                return [4 /*yield*/, this.player.togglePlay()];\n              case 11:\n                _c.sent();\n                _c.label = 12;\n              case 12:\n                if (needsUpdate) {\n                  this.updateState({\n                    needsUpdate: false\n                  });\n                }\n                return [3 /*break*/, 14];\n              case 13:\n                error_8 = _c.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_8);\n                return [3 /*break*/, 14];\n              case 14:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"updateSeekBar\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, progressMs, track, position, state, progress, position, error_9;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!this.isActive) {\n                  return [2 /*return*/];\n                }\n\n                _a = this.state, progressMs = _a.progressMs, track = _a.track;\n                _b.label = 1;\n              case 1:\n                _b.trys.push([1, 5,, 6]);\n                if (!this.isExternalPlayer) return [3 /*break*/, 2];\n                position = progressMs / track.durationMs;\n                position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n                this.updateState({\n                  position: position,\n                  progressMs: progressMs + this.seekUpdateInterval\n                });\n                return [3 /*break*/, 4];\n              case 2:\n                if (!this.player) return [3 /*break*/, 4];\n                return [4 /*yield*/, this.player.getCurrentState()];\n              case 3:\n                state = _b.sent();\n                /* istanbul ignore else */\n                if (state) {\n                  progress = state.position;\n                  position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));\n                  this.updateState({\n                    position: position,\n                    progressMs: progress + this.seekUpdateInterval\n                  });\n                }\n                _b.label = 4;\n              case 4:\n                return [3 /*break*/, 6];\n              case 5:\n                error_9 = _b.sent();\n                // eslint-disable-next-line no-console\n                console.error(error_9);\n                return [3 /*break*/, 6];\n              case 6:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n\n    Object.defineProperty(_this, \"updateState\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (state) {\n        if (state === void 0) {\n          state = {};\n        }\n        if (!_this.isActive) {\n          return;\n        }\n        _this.setState(state);\n      }\n    });\n    _this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: _this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1\n    };\n    _this.styles = getMergedStyles(props.styles);\n    return _this;\n  }\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidMount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a;\n      return __awaiter(this, void 0, void 0, function () {\n        var _b, top;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              this.isActive = true;\n              _b = (((_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;\n              this.updateState({\n                playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n                status: STATUS.INITIALIZING\n              });\n              if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n              } else {\n                this.initializePlayer();\n              }\n              return [4 /*yield*/, loadSpotifyPlayer()];\n            case 1:\n              _c.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentDidUpdate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (previousProps, previousState) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;\n        var _this = this;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, error = _a.error, isInitializing = _a.isInitializing, isPlaying = _a.isPlaying, status = _a.status, track = _a.track;\n              _b = this.props, autoPlay = _b.autoPlay, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;\n              isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n              changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;\n              playOptions = this.getPlayOptions(uris);\n              canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n              shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));\n              if (!(canPlay && shouldPlay)) return [3 /*break*/, 2];\n              return [4 /*yield*/, play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, playOptions))];\n            case 1:\n              _c.sent();\n              /* istanbul ignore else */\n              if (!isPlaying) {\n                this.updateState({\n                  isPlaying: true\n                });\n              }\n              if (this.isExternalPlayer) {\n                this.syncTimeout = window.setTimeout(function () {\n                  _this.syncDevice();\n                }, 600);\n              }\n              return [3 /*break*/, 3];\n            case 2:\n              if (changedURIs && !isPlaying) {\n                this.updateState({\n                  needsUpdate: true\n                });\n              }\n              _c.label = 3;\n            case 3:\n              if (previousState.status !== status) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.STATUS\n                }));\n              }\n              if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId)) return [3 /*break*/, 6];\n              if (!isReady) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.DEVICE\n                }));\n              }\n              return [4 /*yield*/, this.toggleSyncInterval(this.isExternalPlayer)];\n            case 4:\n              _c.sent();\n              return [4 /*yield*/, this.updateSeekBar()];\n            case 5:\n              _c.sent();\n              _c.label = 6;\n            case 6:\n              if (previousState.track.id !== track.id && track.id) {\n                this.handleCallback(__assign(__assign({}, this.state), {\n                  type: TYPE.TRACK\n                }));\n                if (showSaveIcon) {\n                  this.updateState({\n                    isSaved: false\n                  });\n                }\n              }\n              if (!(previousState.isPlaying !== isPlaying)) return [3 /*break*/, 8];\n              this.toggleProgressBar();\n              return [4 /*yield*/, this.toggleSyncInterval(this.isExternalPlayer)];\n            case 7:\n              _c.sent();\n              this.handleCallback(__assign(__assign({}, this.state), {\n                type: TYPE.PLAYER\n              }));\n              _c.label = 8;\n            case 8:\n              if (token && previousProps.token !== token) {\n                this.hasNewToken = true;\n                if (!isInitializing) {\n                  this.initializePlayer();\n                } else {\n                  this.hasNewToken = true;\n                }\n              }\n              if (!(previousProps.play !== playProp && playProp !== isPlaying)) return [3 /*break*/, 10];\n              return [4 /*yield*/, this.togglePlay(!track.id)];\n            case 9:\n              _c.sent();\n              _c.label = 10;\n            case 10:\n              if (!(previousProps.offset !== offset)) return [3 /*break*/, 12];\n              return [4 /*yield*/, this.toggleOffset()];\n            case 11:\n              _c.sent();\n              _c.label = 12;\n            case 12:\n              if (!(previousState.isInitializing && !isInitializing)) return [3 /*break*/, 14];\n              if (error === 'authentication_error' && this.hasNewToken) {\n                this.hasNewToken = false;\n                this.initializePlayer();\n              }\n              if (!(syncExternalDevice && !uris)) return [3 /*break*/, 14];\n              return [4 /*yield*/, getPlaybackState(token)];\n            case 13:\n              player = _c.sent();\n              /* istanbul ignore else */\n              if (player && player.is_playing && player.device.id !== deviceId) {\n                this.setExternalDevice(player.device.id);\n              }\n              _c.label = 14;\n            case 14:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"componentWillUnmount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.isActive = false;\n              if (!this.player) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.player.disconnect()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              clearInterval(this.playerSyncInterval);\n              clearInterval(this.playerProgressInterval);\n              clearTimeout(this.syncTimeout);\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"isExternalPlayer\", {\n    get: function () {\n      var _a = this.state,\n        currentDeviceId = _a.currentDeviceId,\n        deviceId = _a.deviceId,\n        status = _a.status;\n      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"handleCallback\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (state) {\n      var callback = this.props.callback;\n      if (callback) {\n        callback(state);\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"initializeDevices\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.props, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n              return [4 /*yield*/, getDevices(token)];\n            case 1:\n              devices = _b.sent().devices;\n              currentDeviceId = id;\n              if (persistDeviceSelection) {\n                savedDeviceId_1 = sessionStorage.getItem('rswpDeviceId');\n                /* istanbul ignore else */\n                if (!savedDeviceId_1 || !devices.some(function (d) {\n                  return d.id === savedDeviceId_1;\n                })) {\n                  sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n                } else {\n                  currentDeviceId = savedDeviceId_1;\n                }\n              }\n              return [2 /*return*/, {\n                currentDeviceId: currentDeviceId,\n                devices: devices\n              }];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleSyncInterval\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (shouldSync) {\n      return __awaiter(this, void 0, void 0, function () {\n        var syncExternalDeviceInterval, error_10;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n              if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval)) return [3 /*break*/, 3];\n              return [4 /*yield*/, this.syncDevice()];\n            case 2:\n              _a.sent();\n              clearInterval(this.playerSyncInterval);\n              this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1000);\n              _a.label = 3;\n            case 3:\n              if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n                clearInterval(this.playerSyncInterval);\n                this.playerSyncInterval = undefined;\n              }\n              return [3 /*break*/, 5];\n            case 4:\n              error_10 = _a.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_10);\n              return [3 /*break*/, 5];\n            case 5:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"toggleProgressBar\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var isPlaying = this.state.isPlaying;\n      /* istanbul ignore else */\n      if (isPlaying) {\n        /* istanbul ignore else */\n        if (!this.playerProgressInterval) {\n          this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);\n        }\n      } else if (this.playerProgressInterval) {\n        clearInterval(this.playerProgressInterval);\n        this.playerProgressInterval = undefined;\n      }\n    }\n  });\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.state,\n        currentDeviceId = _a.currentDeviceId,\n        deviceId = _a.deviceId,\n        devices = _a.devices,\n        error = _a.error,\n        errorType = _a.errorType,\n        isActive = _a.isActive,\n        isMagnified = _a.isMagnified,\n        isPlaying = _a.isPlaying,\n        isUnsupported = _a.isUnsupported,\n        nextTracks = _a.nextTracks,\n        playerPosition = _a.playerPosition,\n        position = _a.position,\n        previousTracks = _a.previousTracks,\n        status = _a.status,\n        track = _a.track,\n        volume = _a.volume;\n      var _b = this.props,\n        locale = _b.locale,\n        name = _b.name,\n        showSaveIcon = _b.showSaveIcon,\n        token = _b.token,\n        updateSavedStatus = _b.updateSavedStatus;\n      var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n      var isPlaybackError = errorType === 'playback_error';\n      var localeMerged = getLocale(locale);\n      var output = _jsx(Loader, {\n        styles: this.styles\n      });\n      var info;\n      if (isPlaybackError) {\n        info = _jsx(\"p\", {\n          children: error\n        });\n      }\n      if (isReady) {\n        /* istanbul ignore else */\n        if (!info) {\n          info = _jsx(Info, {\n            isActive: isActive,\n            locale: localeMerged,\n            onFavoriteStatusChange: this.handleFavoriteStatusChange,\n            showSaveIcon: showSaveIcon,\n            styles: this.styles,\n            token: token,\n            track: track,\n            updateSavedStatus: updateSavedStatus\n          });\n        }\n        output = _jsxs(_Fragment, {\n          children: [_jsx(\"div\", {\n            children: info\n          }), _jsx(Controls, {\n            isExternalDevice: this.isExternalPlayer,\n            isPlaying: isPlaying,\n            locale: localeMerged,\n            nextTracks: nextTracks,\n            onClickNext: this.handleClickNext,\n            onClickPrevious: this.handleClickPrevious,\n            onClickTogglePlay: this.handleClickTogglePlay,\n            previousTracks: previousTracks,\n            styles: this.styles\n          }), _jsx(Actions, {\n            currentDeviceId: currentDeviceId,\n            deviceId: deviceId,\n            devices: devices,\n            isDevicesOpen: isUnsupported && !deviceId,\n            locale: localeMerged,\n            onClickDevice: this.handleClickDevice,\n            playerPosition: playerPosition,\n            setVolume: this.setVolume,\n            styles: this.styles,\n            volume: volume\n          })]\n        });\n      }\n      if (status === STATUS.ERROR) {\n        output = _jsxs(ErrorMessage, __assign({\n          styles: this.styles\n        }, {\n          children: [name, \": \", error]\n        }));\n      }\n      return _jsxs(Player, __assign({\n        ref: this.ref,\n        styles: this.styles\n      }, {\n        children: [isReady && _jsx(Slider, {\n          isMagnified: isMagnified,\n          onChangeRange: this.handleChangeRange,\n          onToggleMagnify: this.handleToggleMagnify,\n          position: position,\n          styles: this.styles\n        }), _jsx(Content, __assign({\n          styles: this.styles\n        }, {\n          children: output\n        }))]\n      }));\n    }\n  });\n  // eslint-disable-next-line react/static-property-placement\n  Object.defineProperty(SpotifyWebPlayer, \"defaultProps\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      magnifySliderOnHover: false,\n      name: 'Spotify Web Player',\n      showSaveIcon: false,\n      syncExternalDeviceInterval: 5,\n      syncExternalDevice: false\n    }\n  });\n  return SpotifyWebPlayer;\n}(React.PureComponent);\nexport * from './types';\nexport default SpotifyWebPlayer;\nexport { STATUS, TYPE } from './utils';","map":{"version":3,"mappings":"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","names":["React","memoize","Actions","Content","Controls","ErrorMessage","Info","Loader","Player","Slider","getDevices","getPlaybackState","next","pause","play","previous","seek","setDevice","setVolume","getMergedStyles","getLocale","getSpotifyURIType","isEqualArray","loadSpotifyPlayer","parseVolume","round","STATUS","TYPE","validateURI","__extends","props","_super","Object","artists","durationMs","id","image","name","uri","data","playOptions","context_uri","undefined","uris","ids","Array","isArray","every","d","console","error","some","warn","filter","length","createRef","position","track","state","_a","callback","token","progress","percentage","isExternalPlayer","Math","_b","updateState","progressMs","player","getCurrentState","track_window","current_track","duration_ms","type","PROGRESS","error_1","isActive","togglePlay","error_2","syncTimeout","window","setTimeout","_this","syncDevice","previousTrack","error_3","nextTrack","error_4","deviceId","isUnsupported","autoPlay","persistDeviceSelection","currentDeviceId","sessionStorage","setItem","is_playing","error_5","status","isSaved","handleCallback","FAVORITE","message","isPlaybackError","isInitializationError","nextStatus","devices","disconnect","UNSUPPORTED","ERROR","errorType","isInitializing","paused","album","name_1","next_tracks","previous_tracks","isPlaying","getVolume","volume","_c","setAlbumImage","trackState","nextTracks","previousTracks","error_6","device_id","initializeDevices","READY","IDLE","magnifySliderOnHover","previousState","isMagnified","Spotify","getOAuthToken","addListener","handlePlayerStatus","handlePlayerStateChanges","handlePlayerErrors","connect","width","min","images","map","thumb","find","url","emptyTrack","Error","item","progress_ms","device","volume_percent","error_7","offset","init","needsUpdate","shouldInitialize","getPlayOptions","playerState","activateElement","error_8","Number","isFinite","toFixed","seekUpdateInterval","error_9","setState","playerPosition","initialVolume","styles","ref","current","getBoundingClientRect","top","innerHeight","INITIALIZING","onSpotifyWebPlaybackSDKReady","initializePlayer","previousProps","playProp","showSaveIcon","syncExternalDevice","isReady","changedURIs","canPlay","shouldPlay","DEVICE","toggleSyncInterval","updateSeekBar","TRACK","toggleProgressBar","PLAYER","hasNewToken","toggleOffset","setExternalDevice","clearInterval","playerSyncInterval","playerProgressInterval","clearTimeout","SpotifyWebPlayer","savedDeviceId_1","getItem","shouldSync","syncExternalDeviceInterval","setInterval","error_10","locale","updateSavedStatus","indexOf","localeMerged","output","_jsx","info","children","onFavoriteStatusChange","handleFavoriteStatusChange","_jsxs","isExternalDevice","onClickNext","handleClickNext","onClickPrevious","handleClickPrevious","onClickTogglePlay","handleClickTogglePlay","isDevicesOpen","onClickDevice","handleClickDevice","onChangeRange","handleChangeRange","onToggleMagnify","handleToggleMagnify","PureComponent"],"sources":["C:\\Users\\tornt\\OneDrive\\Desktop\\temp\\node_modules\\react-spotify-web-playback\\src\\index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport {\n  getDevices,\n  getPlaybackState,\n  next,\n  pause,\n  play,\n  previous,\n  seek,\n  setDevice,\n  setVolume,\n} from './spotify';\nimport { getMergedStyles } from './styles';\nimport {\n  CallbackState,\n  PlayOptions,\n  Props,\n  SpotifyDevice,\n  SpotifyPlayerCallback,\n  SpotifyPlayerStatus,\n  State,\n  StylesOptions,\n} from './types';\nimport {\n  getLocale,\n  getSpotifyURIType,\n  isEqualArray,\n  loadSpotifyPlayer,\n  parseVolume,\n  round,\n  STATUS,\n  TYPE,\n  validateURI,\n} from './utils';\n\nimport { Spotify } from '../global';\n\nclass SpotifyWebPlayer extends React.PureComponent<Props, State> {\n  private isActive = false;\n  private emptyTrack = {\n    artists: [] as Spotify.Artist[],\n    durationMs: 0,\n    id: '',\n    image: '',\n    name: '',\n    uri: '',\n  };\n\n  private getPlayOptions = memoize((data): PlayOptions => {\n    const playOptions: PlayOptions = {\n      context_uri: undefined,\n      uris: undefined,\n    };\n\n    /* istanbul ignore else */\n    if (data) {\n      const ids = Array.isArray(data) ? data : [data];\n\n      if (!ids.every(d => validateURI(d))) {\n        // eslint-disable-next-line no-console\n        console.error('Invalid URI');\n\n        return playOptions;\n      }\n\n      if (ids.some(d => getSpotifyURIType(d) === 'track')) {\n        if (!ids.every(d => getSpotifyURIType(d) === 'track')) {\n          // eslint-disable-next-line no-console\n          console.warn(\"You can't mix tracks URIs with other types\");\n        }\n\n        playOptions.uris = ids.filter(d => validateURI(d) && getSpotifyURIType(d) === 'track');\n      } else {\n        if (ids.length > 1) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n        }\n\n        // eslint-disable-next-line prefer-destructuring\n        playOptions.context_uri = ids[0];\n      }\n    }\n\n    return playOptions;\n  });\n\n  private hasNewToken = false;\n  private player?: Spotify.Player;\n  private playerProgressInterval?: number;\n  private playerSyncInterval?: number;\n  private ref = React.createRef<HTMLDivElement>();\n  private seekUpdateInterval = 100;\n  private readonly styles: StylesOptions;\n  private syncTimeout?: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1,\n    };\n\n    this.styles = getMergedStyles(props.styles);\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false,\n  };\n\n  public async componentDidMount() {\n    this.isActive = true;\n    const { top = 0 } = this.ref.current?.getBoundingClientRect() || {};\n\n    this.updateState({\n      playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n      status: STATUS.INITIALIZING,\n    });\n\n    if (!window.onSpotifyWebPlaybackSDKReady) {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    } else {\n      this.initializePlayer();\n    }\n\n    await loadSpotifyPlayer();\n  }\n\n  public async componentDidUpdate(previousProps: Props, previousState: State) {\n    const { currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track } =\n      this.state;\n    const {\n      autoPlay,\n      offset,\n      play: playProp,\n      showSaveIcon,\n      syncExternalDevice,\n      token,\n      uris,\n    } = this.props;\n    const isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n    const changedURIs = Array.isArray(uris)\n      ? !isEqualArray(previousProps.uris, uris)\n      : previousProps.uris !== uris;\n    const playOptions = this.getPlayOptions(uris);\n\n    const canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n    const shouldPlay = (changedURIs && isPlaying) || !!(isReady && (autoPlay || playProp));\n\n    if (canPlay && shouldPlay) {\n      await play(token, { deviceId: currentDeviceId, offset, ...playOptions });\n\n      /* istanbul ignore else */\n      if (!isPlaying) {\n        this.updateState({ isPlaying: true });\n      }\n\n      if (this.isExternalPlayer) {\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 600);\n      }\n    } else if (changedURIs && !isPlaying) {\n      this.updateState({ needsUpdate: true });\n    }\n\n    if (previousState.status !== status) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.STATUS,\n      });\n    }\n\n    if (previousState.currentDeviceId !== currentDeviceId && currentDeviceId) {\n      if (!isReady) {\n        this.handleCallback({\n          ...this.state,\n          type: TYPE.DEVICE,\n        });\n      }\n\n      await this.toggleSyncInterval(this.isExternalPlayer);\n      await this.updateSeekBar();\n    }\n\n    if (previousState.track.id !== track.id && track.id) {\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.TRACK,\n      });\n\n      if (showSaveIcon) {\n        this.updateState({ isSaved: false });\n      }\n    }\n\n    if (previousState.isPlaying !== isPlaying) {\n      this.toggleProgressBar();\n      await this.toggleSyncInterval(this.isExternalPlayer);\n\n      this.handleCallback({\n        ...this.state,\n        type: TYPE.PLAYER,\n      });\n    }\n\n    if (token && previousProps.token !== token) {\n      this.hasNewToken = true;\n\n      if (!isInitializing) {\n        this.initializePlayer();\n      } else {\n        this.hasNewToken = true;\n      }\n    }\n\n    if (previousProps.play !== playProp && playProp !== isPlaying) {\n      await this.togglePlay(!track.id);\n    }\n\n    if (previousProps.offset !== offset) {\n      await this.toggleOffset();\n    }\n\n    if (previousState.isInitializing && !isInitializing) {\n      if (error === 'authentication_error' && this.hasNewToken) {\n        this.hasNewToken = false;\n        this.initializePlayer();\n      }\n\n      if (syncExternalDevice && !uris) {\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        /* istanbul ignore else */\n        if (player && player.is_playing && player.device.id !== deviceId) {\n          this.setExternalDevice(player.device.id);\n        }\n      }\n    }\n  }\n\n  public async componentWillUnmount() {\n    this.isActive = false;\n\n    /* istanbul ignore else */\n    if (this.player) {\n      await this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  }\n\n  private get isExternalPlayer(): boolean {\n    const { currentDeviceId, deviceId, status } = this.state;\n\n    return (currentDeviceId && currentDeviceId !== deviceId) || status === STATUS.UNSUPPORTED;\n  }\n\n  private handleCallback(state: CallbackState): void {\n    const { callback } = this.props;\n\n    if (callback) {\n      callback(state);\n    }\n  }\n\n  private handleChangeRange = async (position: number) => {\n    const { track } = this.state;\n    const { callback, token } = this.props;\n    let progress = 0;\n\n    try {\n      const percentage = position / 100;\n\n      if (this.isExternalPlayer) {\n        progress = Math.round(track.durationMs * percentage);\n        await seek(token, progress);\n\n        this.updateState({\n          position,\n          progressMs: progress,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        if (state) {\n          progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n          await this.player.seek(progress);\n\n          this.updateState({\n            position,\n            progressMs: progress,\n          });\n        } else {\n          this.updateState({ position: 0 });\n        }\n      }\n\n      if (callback) {\n        callback({\n          ...this.state,\n          type: TYPE.PROGRESS,\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickTogglePlay = async () => {\n    const { isActive } = this.state;\n\n    try {\n      await this.togglePlay(!this.isExternalPlayer && !isActive);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickPrevious = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await previous(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.previousTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickNext = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await next(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.nextTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickDevice = async (deviceId: string) => {\n    const { isUnsupported } = this.state;\n    const { autoPlay, persistDeviceSelection, token } = this.props;\n\n    this.updateState({ currentDeviceId: deviceId });\n\n    try {\n      await setDevice(token, deviceId);\n\n      /* istanbul ignore else */\n      if (persistDeviceSelection) {\n        sessionStorage.setItem('rswpDeviceId', deviceId);\n      }\n\n      /* istanbul ignore else */\n      if (isUnsupported) {\n        await this.syncDevice();\n\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        if (player && !player.is_playing && autoPlay) {\n          await this.togglePlay(true);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleFavoriteStatusChange = (status: boolean) => {\n    const { isSaved } = this.state;\n\n    this.updateState({ isSaved: status });\n\n    /* istanbul ignore else */\n    if (isSaved !== status) {\n      this.handleCallback({\n        ...this.state,\n        isSaved: status,\n        type: TYPE.FAVORITE,\n      });\n    }\n  };\n\n  private handlePlayerErrors = async (type: string, message: string) => {\n    const { status } = this.state;\n    const isPlaybackError = type === 'playback_error';\n    const isInitializationError = type === 'initialization_error';\n    let nextStatus = status;\n    let devices: SpotifyDevice[] = [];\n\n    if (this.player && !isPlaybackError) {\n      await this.player.disconnect();\n    }\n\n    if (isInitializationError) {\n      nextStatus = STATUS.UNSUPPORTED;\n\n      const { token } = this.props;\n\n      ({ devices = [] } = await getDevices(token));\n    }\n\n    if (!isInitializationError && !isPlaybackError) {\n      nextStatus = STATUS.ERROR;\n    }\n\n    this.updateState({\n      devices,\n      error: message,\n      errorType: type,\n      isInitializing: false,\n      isUnsupported: isInitializationError,\n      status: nextStatus,\n    });\n  };\n\n  private handlePlayerStateChanges = async (state: Spotify.PlaybackState) => {\n    try {\n      /* istanbul ignore else */\n      if (state) {\n        const {\n          paused,\n          position,\n          track_window: {\n            current_track: { album, artists, duration_ms, id, name, uri },\n            next_tracks,\n            previous_tracks,\n          },\n        } = state;\n\n        const isPlaying = !paused;\n        const volume = await this.player!.getVolume();\n        const track = {\n          artists,\n          durationMs: duration_ms,\n          id,\n          image: this.setAlbumImage(album),\n          name,\n          uri,\n        };\n        let trackState;\n\n        if (position === 0) {\n          trackState = {\n            nextTracks: next_tracks,\n            position: 0,\n            previousTracks: previous_tracks,\n            track,\n          };\n        }\n\n        this.updateState({\n          error: '',\n          errorType: '',\n          isActive: true,\n          isPlaying,\n          progressMs: position,\n          volume: round(volume),\n          ...trackState,\n        });\n      } else if (this.isExternalPlayer) {\n        await this.syncDevice();\n      } else {\n        this.updateState({\n          isActive: false,\n          isPlaying: false,\n          nextTracks: [],\n          position: 0,\n          previousTracks: [],\n          track: {\n            artists: '',\n            durationMs: 0,\n            id: '',\n            image: '',\n            name: '',\n            uri: '',\n          },\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handlePlayerStatus = async ({ device_id }: Spotify.WebPlaybackInstance) => {\n    const { currentDeviceId, devices } = await this.initializeDevices(device_id);\n\n    this.updateState({\n      currentDeviceId,\n      deviceId: device_id,\n      devices,\n      isInitializing: false,\n      status: device_id ? STATUS.READY : STATUS.IDLE,\n    });\n  };\n\n  private handleToggleMagnify = () => {\n    const { magnifySliderOnHover } = this.props;\n\n    if (magnifySliderOnHover) {\n      this.updateState((previousState: State) => {\n        return { isMagnified: !previousState.isMagnified };\n      });\n    }\n  };\n\n  private async initializeDevices(id: string) {\n    const { persistDeviceSelection, token } = this.props;\n    const { devices } = await getDevices(token);\n    let currentDeviceId = id;\n\n    if (persistDeviceSelection) {\n      const savedDeviceId = sessionStorage.getItem('rswpDeviceId');\n\n      /* istanbul ignore else */\n      if (!savedDeviceId || !devices.some((d: SpotifyDevice) => d.id === savedDeviceId)) {\n        sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n      } else {\n        currentDeviceId = savedDeviceId;\n      }\n    }\n\n    return { currentDeviceId, devices };\n  }\n\n  private initializePlayer = () => {\n    const { volume } = this.state;\n    const { name = 'Spotify Web Player', token } = this.props;\n\n    if (!window.Spotify) {\n      return;\n    }\n\n    this.updateState({ isInitializing: true });\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: (callback: SpotifyPlayerCallback) => {\n        callback(token);\n      },\n      name,\n      volume,\n    });\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    this.player.addListener('initialization_error', error =>\n      this.handlePlayerErrors('initialization_error', error.message),\n    );\n    this.player.addListener('authentication_error', error =>\n      this.handlePlayerErrors('authentication_error', error.message),\n    );\n    this.player.addListener('account_error', error =>\n      this.handlePlayerErrors('account_error', error.message),\n    );\n    this.player.addListener('playback_error', error =>\n      this.handlePlayerErrors('playback_error', error.message),\n    );\n\n    this.player.connect();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private setAlbumImage = (album: Spotify.Album): string => {\n    const width = Math.min(...album.images.map(d => d.width || 0));\n    const thumb: Spotify.Image = album.images.find(d => d.width === width) || ({} as Spotify.Image);\n\n    return thumb.url;\n  };\n\n  private setExternalDevice = (id: string) => {\n    this.updateState({ currentDeviceId: id, isPlaying: true });\n  };\n\n  private setVolume = async (volume: number) => {\n    const { token } = this.props;\n\n    /* istanbul ignore else */\n    if (this.isExternalPlayer) {\n      await setVolume(token, Math.round(volume * 100));\n      await this.syncDevice();\n    } else if (this.player) {\n      await this.player.setVolume(volume);\n    }\n\n    this.updateState({ volume });\n  };\n\n  private syncDevice = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { deviceId } = this.state;\n    const { token } = this.props;\n\n    try {\n      const player: SpotifyPlayerStatus = await getPlaybackState(token);\n      let track = this.emptyTrack;\n\n      if (!player) {\n        throw new Error('No player');\n      }\n\n      /* istanbul ignore else */\n      if (player.item) {\n        track = {\n          artists: player.item.artists,\n          durationMs: player.item.duration_ms,\n          id: player.item.id,\n          image: this.setAlbumImage(player.item.album),\n          name: player.item.name,\n          uri: player.item.uri,\n        };\n      }\n\n      this.updateState({\n        error: '',\n        errorType: '',\n        isActive: true,\n        isPlaying: player.is_playing,\n        nextTracks: [],\n        previousTracks: [],\n        progressMs: player.item ? player.progress_ms : 0,\n        status: STATUS.READY,\n        track,\n        volume: parseVolume(player.device.volume_percent),\n      });\n    } catch (error: any) {\n      const state = {\n        isActive: false,\n        isPlaying: false,\n        position: 0,\n        track: this.emptyTrack,\n      };\n\n      if (deviceId) {\n        this.updateState({\n          currentDeviceId: deviceId,\n          ...state,\n        });\n\n        return;\n      }\n\n      this.updateState({\n        error: error.message,\n        errorType: 'player_status',\n        status: STATUS.ERROR,\n        ...state,\n      });\n    }\n  };\n\n  private async toggleSyncInterval(shouldSync: boolean) {\n    const { syncExternalDeviceInterval } = this.props;\n\n    try {\n      if (this.isExternalPlayer && shouldSync && !this.playerSyncInterval) {\n        await this.syncDevice();\n\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = window.setInterval(\n          this.syncDevice,\n          syncExternalDeviceInterval! * 1000,\n        );\n      }\n\n      if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = undefined;\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  private toggleProgressBar() {\n    const { isPlaying } = this.state;\n\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(\n          this.updateSeekBar,\n          this.seekUpdateInterval,\n        );\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  }\n\n  private toggleOffset = async () => {\n    const { currentDeviceId, isPlaying } = this.state;\n    const { offset, token, uris } = this.props;\n\n    if (isPlaying && typeof offset === 'number' && Array.isArray(uris)) {\n      await play(token, { deviceId: currentDeviceId, offset, uris });\n    }\n  };\n\n  private togglePlay = async (init = false) => {\n    const { currentDeviceId, isPlaying, needsUpdate } = this.state;\n    const { offset, token, uris } = this.props;\n    const shouldInitialize = init || needsUpdate;\n    const playOptions = this.getPlayOptions(uris);\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        if (!isPlaying) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await pause(token);\n\n          this.updateState({ isPlaying: false });\n        }\n\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        const playerState = await this.player.getCurrentState();\n\n        await this.player.activateElement();\n\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (\n          (!playerState && !!(playOptions.context_uri || playOptions.uris)) ||\n          (shouldInitialize && playerState && playerState.paused)\n        ) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await this.player.togglePlay();\n        }\n      }\n\n      if (needsUpdate) {\n        this.updateState({ needsUpdate: false });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateSeekBar = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { progressMs, track } = this.state;\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        let position = progressMs / track.durationMs;\n\n        position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n\n        this.updateState({\n          position,\n          progressMs: progressMs + this.seekUpdateInterval,\n        });\n      } else if (this.player) {\n        const state = await this.player.getCurrentState();\n\n        /* istanbul ignore else */\n        if (state) {\n          const progress = state.position;\n          const position = Number(\n            ((progress / state.track_window.current_track.duration_ms) * 100).toFixed(1),\n          );\n\n          this.updateState({\n            position,\n            progressMs: progress + this.seekUpdateInterval,\n          });\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateState = (state = {}) => {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState(state);\n  };\n\n  public render() {\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      error,\n      errorType,\n      isActive,\n      isMagnified,\n      isPlaying,\n      isUnsupported,\n      nextTracks,\n      playerPosition,\n      position,\n      previousTracks,\n      status,\n      track,\n      volume,\n    } = this.state;\n    const { locale, name, showSaveIcon, token, updateSavedStatus } = this.props;\n    const isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    const isPlaybackError = errorType === 'playback_error';\n    const localeMerged = getLocale(locale);\n\n    let output = <Loader styles={this.styles!} />;\n    let info;\n\n    if (isPlaybackError) {\n      info = <p>{error}</p>;\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = (\n          <Info\n            isActive={isActive}\n            locale={localeMerged}\n            onFavoriteStatusChange={this.handleFavoriteStatusChange}\n            showSaveIcon={showSaveIcon!}\n            styles={this.styles}\n            token={token}\n            track={track}\n            updateSavedStatus={updateSavedStatus}\n          />\n        );\n      }\n\n      output = (\n        <>\n          <div>{info}</div>\n          <Controls\n            isExternalDevice={this.isExternalPlayer}\n            isPlaying={isPlaying}\n            locale={localeMerged}\n            nextTracks={nextTracks}\n            onClickNext={this.handleClickNext}\n            onClickPrevious={this.handleClickPrevious}\n            onClickTogglePlay={this.handleClickTogglePlay}\n            previousTracks={previousTracks}\n            styles={this.styles}\n          />\n          <Actions\n            currentDeviceId={currentDeviceId}\n            deviceId={deviceId}\n            devices={devices}\n            isDevicesOpen={isUnsupported && !deviceId}\n            locale={localeMerged}\n            onClickDevice={this.handleClickDevice}\n            playerPosition={playerPosition}\n            setVolume={this.setVolume}\n            styles={this.styles}\n            volume={volume}\n          />\n        </>\n      );\n    }\n\n    if (status === STATUS.ERROR) {\n      output = (\n        <ErrorMessage styles={this.styles}>\n          {name}: {error}\n        </ErrorMessage>\n      );\n    }\n\n    return (\n      <Player ref={this.ref} styles={this.styles}>\n        {isReady && (\n          <Slider\n            isMagnified={isMagnified}\n            onChangeRange={this.handleChangeRange}\n            onToggleMagnify={this.handleToggleMagnify}\n            position={position}\n            styles={this.styles!}\n          />\n        )}\n        <Content styles={this.styles}>{output}</Content>\n      </Player>\n    );\n  }\n}\n\nexport * from './types';\n\nexport default SpotifyWebPlayer;\n\nexport { STATUS, TYPE } from './utils';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}