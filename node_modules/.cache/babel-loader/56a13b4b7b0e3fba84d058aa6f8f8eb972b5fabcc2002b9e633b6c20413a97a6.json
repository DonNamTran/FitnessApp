{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport ClickOutside from './ClickOutside';\nimport DevicesIcon from './icons/Devices';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  'pointer-events': 'all',\n  position: 'relative',\n  zIndex: 20,\n  '> div': {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: px(8),\n    position: 'absolute',\n    right: \"-\".concat(px(3)),\n    button: {\n      display: 'block',\n      padding: px(8),\n      whiteSpace: 'nowrap',\n      '&.rswp__devices__active': {\n        fontWeight: 'bold'\n      }\n    }\n  },\n  '> button': {\n    fontSize: px(26)\n  }\n}, function (_a) {\n  var _b;\n  var style = _a.style;\n  return {\n    '> button': {\n      color: style.c\n    },\n    '> div': (_b = {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? \"1px 1px 10px \".concat(style.altColor) : 'none'\n    }, _b[style.p] = '120%', _b.button = {\n      color: style.c\n    }, _b)\n  };\n}, 'DevicesRSWP');\nvar Devices = /** @class */function (_super) {\n  __extends(Devices, _super);\n  function Devices(props) {\n    var _this = _super.call(this, props) || this;\n    Object.defineProperty(_this, \"handleClickSetDevice\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (event) {\n        var onClickDevice = _this.props.onClickDevice;\n        var dataset = event.currentTarget.dataset;\n        /* istanbul ignore else */\n        if (dataset.id) {\n          onClickDevice(dataset.id);\n          _this.setState({\n            isOpen: false\n          });\n        }\n      }\n    });\n    Object.defineProperty(_this, \"handleClickToggleDevices\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        _this.setState(function (state) {\n          return {\n            isOpen: !state.isOpen\n          };\n        });\n      }\n    });\n    _this.state = {\n      isOpen: props.open\n    };\n    return _this;\n  }\n  Object.defineProperty(Devices.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var isOpen = this.state.isOpen;\n      var _a = this.props,\n        currentDeviceId = _a.currentDeviceId,\n        deviceId = _a.deviceId,\n        devices = _a.devices,\n        playerPosition = _a.playerPosition,\n        _b = _a.styles,\n        activeColor = _b.activeColor,\n        altColor = _b.altColor,\n        bgColor = _b.bgColor,\n        color = _b.color,\n        title = _a.title;\n      return _jsx(Wrapper, __assign({\n        style: {\n          altColor: altColor,\n          bgColor: bgColor,\n          c: currentDeviceId && deviceId && currentDeviceId !== deviceId ? activeColor : color,\n          p: playerPosition\n        }\n      }, {\n        children: !!devices.length && _jsxs(_Fragment, {\n          children: [isOpen && _jsx(ClickOutside, __assign({\n            onClick: this.handleClickToggleDevices\n          }, {\n            children: devices.map(function (d) {\n              return _jsx(\"button\", __assign({\n                className: d.id === currentDeviceId ? 'rswp__devices__active' : undefined,\n                \"data-id\": d.id,\n                onClick: _this.handleClickSetDevice,\n                type: \"button\"\n              }, {\n                children: d.name\n              }), d.id);\n            })\n          })), _jsx(\"button\", __assign({\n            \"aria-label\": title,\n            onClick: this.handleClickToggleDevices,\n            title: title,\n            type: \"button\"\n          }, {\n            children: _jsx(DevicesIcon, {})\n          }))]\n        })\n      }));\n    }\n  });\n  return Devices;\n}(React.PureComponent);\nexport default Devices;","map":{"version":3,"mappings":"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","names":["React","ClickOutside","DevicesIcon","px","styled","Wrapper","position","zIndex","display","flexDirection","padding","right","button","whiteSpace","fontWeight","fontSize","_a","style","color","c","backgroundColor","bgColor","boxShadow","altColor","_b","p","__extends","props","_super","Object","event","_this","currentTarget","dataset","id","onClickDevice","setState","isOpen","state","open","currentDeviceId","deviceId","devices","playerPosition","activeColor","title","_jsx","children","length","_jsxs","onClick","handleClickToggleDevices","map","d","className","undefined","handleClickSetDevice","type","name","PureComponent"],"sources":["C:\\Users\\tornt\\OneDrive\\Desktop\\temp\\node_modules\\react-spotify-web-playback\\src\\components\\Devices.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport ClickOutside from './ClickOutside';\nimport DevicesIcon from './icons/Devices';\n\nimport { px, styled } from '../styles';\nimport { StyledProps, StylesOptions } from '../types/common';\nimport { SpotifyDevice } from '../types/spotify';\n\ninterface Props {\n  currentDeviceId?: string;\n  deviceId?: string;\n  devices: SpotifyDevice[];\n  onClickDevice: (deviceId: string) => any;\n  open: boolean;\n  playerPosition: string;\n  styles: StylesOptions;\n  title: string;\n}\n\nexport interface State {\n  isOpen: boolean;\n}\n\nconst Wrapper = styled('div')(\n  {\n    'pointer-events': 'all',\n    position: 'relative',\n    zIndex: 20,\n\n    '> div': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: px(8),\n      position: 'absolute',\n      right: `-${px(3)}`,\n\n      button: {\n        display: 'block',\n        padding: px(8),\n        whiteSpace: 'nowrap',\n\n        '&.rswp__devices__active': {\n          fontWeight: 'bold',\n        },\n      },\n    },\n\n    '> button': {\n      fontSize: px(26),\n    },\n  },\n  ({ style }: StyledProps) => ({\n    '> button': {\n      color: style.c,\n    },\n    '> div': {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? `1px 1px 10px ${style.altColor}` : 'none',\n      [style.p]: '120%',\n      button: {\n        color: style.c,\n      },\n    },\n  }),\n  'DevicesRSWP',\n);\n\nexport default class Devices extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isOpen: props.open,\n    };\n  }\n\n  private handleClickSetDevice = (event: React.MouseEvent<HTMLElement>) => {\n    const { onClickDevice } = this.props;\n    const { dataset } = event.currentTarget;\n\n    /* istanbul ignore else */\n    if (dataset.id) {\n      onClickDevice(dataset.id);\n\n      this.setState({ isOpen: false });\n    }\n  };\n\n  private handleClickToggleDevices = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  public render() {\n    const { isOpen } = this.state;\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      playerPosition,\n      styles: { activeColor, altColor, bgColor, color },\n      title,\n    } = this.props;\n\n    return (\n      <Wrapper\n        style={{\n          altColor,\n          bgColor,\n          c: currentDeviceId && deviceId && currentDeviceId !== deviceId ? activeColor : color,\n          p: playerPosition,\n        }}\n      >\n        {!!devices.length && (\n          <>\n            {isOpen && (\n              <ClickOutside onClick={this.handleClickToggleDevices}>\n                {devices.map((d: SpotifyDevice) => (\n                  <button\n                    key={d.id}\n                    className={d.id === currentDeviceId ? 'rswp__devices__active' : undefined}\n                    data-id={d.id}\n                    onClick={this.handleClickSetDevice}\n                    type=\"button\"\n                  >\n                    {d.name}\n                  </button>\n                ))}\n              </ClickOutside>\n            )}\n            <button\n              aria-label={title}\n              onClick={this.handleClickToggleDevices}\n              title={title}\n              type=\"button\"\n            >\n              <DevicesIcon />\n            </button>\n          </>\n        )}\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}